---
# Source: cloud-zookeeper/templates/metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: cloud-zookeeper-exporter
  namespace: cloud-zookeeper-test
  labels:
    app.kubernetes.io/name: cloud-zookeeper
    helm.sh/chart: cloud-zookeeper-5.2.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9141
      targetPort: metrics
  selector:
    app.kubernetes.io/name: cloud-zookeeper
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/component: metrics
---
# Source: cloud-zookeeper/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: cloud-zookeeper-headless
  namespace: cloud-zookeeper-test
  labels:
    app.kubernetes.io/name: cloud-zookeeper
    helm.sh/chart: cloud-zookeeper-5.2.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: cloud-zookeeper
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/component: zookeeper
---
# Source: cloud-zookeeper/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: cloud-zookeeper
  namespace: cloud-zookeeper-test
  labels:
    app.kubernetes.io/name: cloud-zookeeper
    helm.sh/chart: cloud-zookeeper-5.2.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: cloud-zookeeper
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/component: zookeeper
---
# Source: cloud-zookeeper/templates/metrics-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-zookeeper-exporter
  namespace: cloud-zookeeper-test
  labels:
    app.kubernetes.io/name: cloud-zookeeper
    helm.sh/chart: cloud-zookeeper-5.2.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-zookeeper
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      annotations:
        prometheus.io/port: "9141"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cloud-zookeeper
        helm.sh/chart: cloud-zookeeper-5.2.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
    spec:
      
      containers:
        - image: docker.io/helm/zookeeper-exporter:0.1.2
          name: zookeeper-exporter
          command:
            - /usr/local/bin/zookeeper-exporter
            - -timeout
            - "3"
            - -zk-list
            - cloud-zookeeper-0.cloud-zookeeper-headless.cloud-zookeeper-test.svc.cluster.local:2181
          ports:
            - name: metrics
              containerPort: 9141
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 180
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
---
# Source: cloud-zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cloud-zookeeper
  namespace: cloud-zookeeper-test
  labels:
    app.kubernetes.io/name: cloud-zookeeper
    helm.sh/chart: cloud-zookeeper-5.2.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  serviceName: cloud-zookeeper-headless
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-zookeeper
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/component: zookeeper
  template:
    metadata:
      name: cloud-zookeeper
      labels:
        app.kubernetes.io/name: cloud-zookeeper
        helm.sh/chart: cloud-zookeeper-5.2.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: zookeeper
    spec:
      
      securityContext:
        fsGroup: 1001
      containers:
        - name: zookeeper
          image: docker.io/helm/zookeeper:3.5.6
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
                # Execute entrypoint as usual after obtaining ZOO_SERVER_ID based on POD hostname
                HOSTNAME=`hostname -s`
                if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                  ORD=${BASH_REMATCH[2]}
                  export ZOO_SERVER_ID=$((ORD+1))
                else
                  echo "Failed to get index from hostname $HOST"
                  exit 1
                fi
                exec /entrypoint.sh /run.sh
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 256Mi
          env:
            - name: ZOO_PORT_NUMBER
              value: "2181"
            - name: ZOO_TICK_TIME
              value: "2000"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr, mntr"
            - name: ZOO_SERVERS
              value: cloud-zookeeper-0.cloud-zookeeper-headless.cloud-zookeeper-test.svc.cluster.local:2888:3888 
            - name: ZOO_ENABLE_AUTH
              value: "no"
            - name: ZOO_HEAP_SIZE
              value: "1024"
            - name: ZOO_LOG_LEVEL
              value: "ERROR"
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          ports:
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: election
              containerPort: 3888
          livenessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
        storageClassName: ""
---
# Source: cloud-zookeeper/templates/prometheus-rule.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cloud-zookeeper
  namespace: cloud-zookeeper-test
spec:
  groups:
  - name: middleware.zookeeper
    rules:
    - alert: ZookeeperDown
      annotations:
        description: Zookeeper down on instance {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS {{$labels }})
        key: middleware.zookeeper.down
        summary: Zookeeper Down，app名称 {{ $labels.pod }}，命名空间 {{ $labels.namespace }}  (instance {{ $labels.instance }})
        trigger: '{{ $value }}'
      expr: zk_up == 0
      for: 0s
      labels:
        severity: critical
        alertname: ZookeeperDown
        type: middleware.zookeeper
    - alert: ZookeeperMissingLeader
      annotations:
        description: Zookeeper cluster has no node marked as leader\n  VALUE = {{ $value }}\n  LABELS {{$labels }})
        key: middleware.zookeeper.missingleader
        summary: Zookeeper missing leader，app名称 {{ $labels.pod }}，命名空间 {{ $labels.namespace }}  (instance {{ $labels.instance }})
        trigger: '{{ $value }}'
      expr: sum(zk_server_leader) == 0
      for: 0s
      labels:
        severity: critical
        alertname: ZookeeperMissingLeader
        type: middleware.zookeeper
    - alert: ZookeeperTooManyLeaders
      annotations:
        description: Zookeeper cluster has too many nodes marked as leader\n  VALUE = {{ $value }}\n  LABELS {{$labels }})
        key: middleware.zookeeper.toomanyleaders
        summary: Zookeeper Too Many Leaders，app名称 {{ $labels.pod }}，命名空间 {{ $labels.namespace }}  (instance {{ $labels.instance }})
        trigger: '{{ $value }}'
      expr: sum(zk_server_leader) > 1
      for: 0s
      labels:
        severity: critical
        alertname: ZookeeperTooManyLeaders
        type: middleware.zookeeper
    - alert: ZookeeperNotOk
      annotations:
        description: Zookeeper instance is not ok\n  VALUE = {{ $value }}\n  LABELS {{$labels }})
        key: middleware.zookeeper.notok
        summary: Zookeeper Not Ok，app名称 {{ $labels.pod }}，命名空间 {{ $labels.namespace }}  (instance {{ $labels.instance }})
        trigger: '{{ $value }}'
      expr: zk_ruok == 0
      for: 3m
      labels:
        severity: warning
        alertname: ZookeeperNotOk
        type: middleware.zookeeper
---
# Source: cloud-zookeeper/templates/servicemonitor.yaml
# zookeeper
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cloud-zookeeper
  namespace: cloud-zookeeper-test
spec:
  endpoints:
  - targetPort: 8080
    interval: 30s
    path: /metrics
    scrapeTimeout: 10s
  jobLabel: cloud-zookeeper
  namespaceSelector:
    matchNames:
    - cloud-zookeeper-test
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-zookeeper
      helm.sh/chart: cloud-zookeeper-5.2.0
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/component: metrics
